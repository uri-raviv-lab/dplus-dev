name: Create DPlus API Wheels
on:
  push:
    tags:
      - api-v*

jobs:
  manylinux-wheels:
    runs-on: ubuntu-latest
    name: Create the manylinux wheels for all supported Python versions
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build docker image
        working-directory: PythonInterface
        run: docker build -f Dockerfile.manylinux .. -t dplus-api-manylinux:latest --build-arg GITHUB_VERSION=${{ github.ref }}
      - name: Copy wheels
        working-directory: PythonInterface
        run: docker run --rm --name dplus-api-manylinux -v `pwd`:/external dplus-api-manylinux:latest
      - name: Upload to Release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: PythonInterface/dplus-api-wheels/dplus_api*.whl
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
          body: "DPlus API Manylinux Wheels"
      # - name: Install and upload Gemfury CLI # This part needs to be checked
      #   run: pip install gemfury
      # - name: Upload to Gemfury
      #   env:
      #     FURY_AUTH: $ {{ secrets.GEMFURY_AUTH }} # delete space between $ and {{
      #   run: fury push PythonInterface/dplus_api*.whl

  windows-wheels:
    runs-on: windows-latest  # Required for Visual Studio 2019
    strategy:
      matrix:
        python-version: [ '3.9', '3.10', '3.11', '3.12' ]
    name: Create the Windows Wheel for Python ${{ matrix.python-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install boost
        run: |
          Invoke-WebRequest https://boost.teeks99.com/bin/1.79.0/boost_1_79_0-msvc-14.3-64.exe -OutFile boost-setup.exe
          .\boost-setup.exe /DIR=boost /SILENT | Out-Null
          move boost\lib64-msvc-14.3 boost\lib64
      - name: Set up CUDA
        uses: Jimver/cuda-toolkit@v0.2.14
        id: cuda-toolkit
        with:
          cuda: '11.7.0'
          method: 'network'
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3
      - name: Compile Backend
        env:
          BOOST_ROOT: ${{ github.workspace }}/boost
        run: |
          msbuild Dplus.sln /p:Configuration=Release /p:Platform=x64 /t:Backend\Backend:Rebuild
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Set Python environment
        working-directory: PythonInterface
        run: |
          pip install -r requirements.txt
          pip install wheel
      - name: Create the wheel
        working-directory: PythonInterface
        env:
          DPLUS_API_DEBUG: NO
          GITHUB_VERSION: ${{ github.ref }}
        run: |
          python setup.py prepare
          pip wheel .
      - name: Upload to Release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: PythonInterface/dplus_api*.whl
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
          body: "Windows Wheels"
      # - name: Install and upload Gemfury CLI # This part needs to be checked
      #   run: pip install gemfury
      # - name: Upload to Gemfury
      #   env:
      #     FURY_AUTH: ${{ secrets.GEMFURY_AUTH }}
      #   run: fury push PythonInterface/dplus_api*.whl 

